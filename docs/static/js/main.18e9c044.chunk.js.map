{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GirGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","placeholder","onChange","target","getGifs","a","url","encodeURI","fetch","response","json","data","gif","map","img","id","title","src","images","downsized_medium","GifGridItem","alt","className","GirGrid","loading","state","setState","useEffect","then","imgs","useFecthGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA+BeA,EA5BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,uBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC7BR,GAAc,SAACS,GAAD,OAAeP,GAAf,mBAA8BO,OAC9CN,EAAc,KAId,UACE,6BAAKD,IACL,uBACEQ,KAAK,OACLC,MAAOT,EACPU,YAAY,cACZC,SAjBc,SAACR,GACnBF,EAAcE,EAAES,OAAOH,c,uBCPdI,EAAO,uCAAG,WAAON,GAAP,uBAAAO,EAAA,6DACfC,EADe,iDACiCC,UACpDT,GAFmB,+DAIEU,MAAMF,GAJR,cAIfG,EAJe,gBAKEA,EAASC,OALX,uBAKbC,EALa,EAKbA,KAEFC,EAAMD,EAAKE,KAAI,SAACC,GACpB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBb,QAXhB,kBAedM,GAfc,4CAAH,sDCWLQ,EATK,SAAC,GAAkC,IAAD,IAA/BN,IAAOE,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,IAAKI,EAAY,EAAZA,IACxC,OACE,sBAAKC,UAAU,gDAAf,UACE,qBAAKL,IAAKA,EAAKI,IAAKA,IACpB,4BAAIL,QCgBKO,EAnBC,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SACjB,ECD0B,SAACA,GAC3B,MAA0BR,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KASA,OAJAC,qBAAU,WACRvB,EAAQN,GAAU8B,MAAK,SAACC,GAAD,OAAUH,EAAS,CAAEf,KAAMkB,EAAML,SAAS,SAChE,CAAC1B,IAEG2B,EDT2BK,CAAahC,GAAjCoB,EAAd,EAAQP,KAAca,EAAtB,EAAsBA,QAGtB,OADAO,QAAQC,IAAId,EAAQM,GAElB,qCACE,6BAAK1B,IACJ0B,GAAW,2CACZ,qBAAKF,UAAU,YAAf,SACGJ,EAAOL,KAAI,SAACC,GAAD,OACV,6BACE,cAAC,EAAD,CAAaA,IAAKA,KADXA,EAAIC,aEWRkB,EApBM,WACnB,MAAoC3C,mBAAS,CAAC,gBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAKA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG6C,EAAWrB,KAAI,SAACf,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCZxBqC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.18e9c044.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInput = (e) => {\n    setInputValue(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2)\n      setCategories((category) => [inputValue, ...category]);\n    setInputValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>{inputValue}</h3>\n      <input\n        type=\"text\"\n        value={inputValue}\n        placeholder=\"Buscar algo\"\n        onChange={handleInput}\n      />\n    </form>\n  );\n};\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\nexport default AddCategory;\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=X4uDs4YEaLA16Rvf23L2U5w1J19F3rVe`;\n  const response = await fetch(url);\n  const { data } = await response.json();\n\n  const gif = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      src: img.images.downsized_medium.url,\n    };\n  });\n\n  return gif;\n};\n","import React from 'react';\n\nconst GifGridItem = ({ img: { title, src, alt } }) => {\n  return (\n    <div className=\"animate__animated animate__fadeInLeftBig card\">\n      <img src={src} alt={alt} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","import React from 'react';\nimport { useFecthGifs } from '../hooks/useFecthGifs';\nimport GifGridItem from './GifGridItem';\nconst GirGrid = ({ category }) => {\n  const { data: images, loading } = useFecthGifs(category);\n\n  console.log(images, loading);\n  return (\n    <>\n      <h3>{category}</h3>\n      {loading && <p>Loading...</p>}\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <li key={img.id}>\n            <GifGridItem img={img} />\n          </li>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default GirGrid;\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFecthGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => setState({ data: imgs, loading: false }));\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GirGrid from './components/GirGrid';\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(['Dragon Ball']);\n\n  /* const handleAdd = () => {\n    setCategories([...categories, 'GOT']);\n  }; */\n  return (\n    <>\n      <h1>GifExpertApp</h1>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((category) => (\n          <GirGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}